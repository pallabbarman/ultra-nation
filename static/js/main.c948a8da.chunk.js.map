{"version":3,"sources":["components/Cart/Cart.js","components/Country/Country.js","App.js","reportWebVitals.js","index.js"],"names":["Cart","props","addCart","cart","totalPopulation","reduce","sum","country","population","length","Country","handleAddCountry","name","flag","addCountry","className","src","alt","onClick","type","App","useState","countries","setCountries","setCart","useEffect","fetch","then","res","json","data","catch","err","console","log","newCart","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAceA,EAZF,SAACC,GAAW,IAEfC,EADWD,EAATE,KAEFC,EAAkBF,EAAQG,QAAO,SAACC,EAAKC,GAAN,OAAkBD,EAAMC,EAAQC,aAAY,GACnF,OACI,gCACI,gDAAmBN,EAAQO,UAC3B,mDAAsBL,SCWnBM,G,MAjBC,SAACT,GAAW,IAChBM,EAA8BN,EAA9BM,QAASI,EAAqBV,EAArBU,iBACTC,EAA2BL,EAA3BK,KAAMJ,EAAqBD,EAArBC,WAAYK,EAASN,EAATM,KACpBC,EAAaH,EAEnB,OACI,sBAAKI,UAAU,UAAf,UACI,qBAAKC,IAAKH,EAAMI,IAAI,KACpB,6BAAKL,IACL,8CAAiBJ,KACjB,wBAAQU,QAAS,kBAAMJ,EAAWP,IAAUY,KAAK,SAAjD,8BCwBGC,MAhCf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACJC,EADI,KACOC,EADP,OAEaF,mBAAS,IAFtB,mBAEJlB,EAFI,KAEEqB,EAFF,KAIXC,qBAAU,WACNC,MAAM,wCACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUP,EAAaO,MAC5BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QACjC,IAEH,IAAMrB,EAAmB,SAACJ,GACtB,IAAM4B,EAAO,sBAAOhC,GAAP,CAAaI,IAC1BiB,EAAQW,IAGZ,OACI,gCACI,sBAAKpB,UAAU,MAAf,UACI,6CAAgBO,EAAUb,UAC1B,iDAAoBN,EAAKM,UACzB,cAAC,EAAD,CAAMN,KAAMA,OAEhB,qBAAKY,UAAU,eAAf,SACKO,EAAUc,KAAI,SAAC7B,GAAD,OACX,cAAC,EAAD,CAASA,QAASA,EAASI,iBAAkBA,aClBlD0B,G,MAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.c948a8da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cart = (props) => {\r\n    const { cart } = props;\r\n    const addCart = cart;\r\n    const totalPopulation = addCart.reduce((sum, country) => sum + country.population, 0);\r\n    return (\r\n        <div>\r\n            <h2>This is Cart: {addCart.length}</h2>\r\n            <p>Total Population: {totalPopulation}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport './country.css';\r\n\r\nconst Country = (props) => {\r\n    const { country, handleAddCountry } = props;\r\n    const { name, population, flag } = country;\r\n    const addCountry = handleAddCountry;\r\n\r\n    return (\r\n        <div className=\"country\">\r\n            <img src={flag} alt=\"\" />\r\n            <h4>{name}</h4>\r\n            <h5>Population: {population}</h5>\r\n            <button onClick={() => addCountry(country)} type=\"button\">\r\n                Add Country\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Country;\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Cart from './components/Cart/Cart';\nimport Country from './components/Country/Country';\n\nfunction App() {\n    const [countries, setCountries] = useState([]);\n    const [cart, setCart] = useState([]);\n\n    useEffect(() => {\n        fetch('https://restcountries.eu/rest/v2/all')\n            .then((res) => res.json())\n            .then((data) => setCountries(data))\n            .catch((err) => console.log(err));\n    }, []);\n\n    const handleAddCountry = (country) => {\n        const newCart = [...cart, country];\n        setCart(newCart);\n    };\n\n    return (\n        <div>\n            <div className=\"App\">\n                <h1>Countries: {countries.length}</h1>\n                <h4>Country Added: {cart.length}</h4>\n                <Cart cart={cart} />\n            </div>\n            <div className=\"show-country\">\n                {countries.map((country) => (\n                    <Country country={country} handleAddCountry={handleAddCountry} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}